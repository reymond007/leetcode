public class Solution {
    /**
     * @param s: A string s
     * @param dict: A dictionary of words dict
     */
    public int getMaxLength(Set<String> dict)
    {
        int result = 0;
        for(String str : dict)
        {
            if(result < str.length())
            {
                result = str.length();
            }
        }
        return result;
    }
     
    public boolean wordBreak(String s, Set<String> dict) {
        // write your code here   
        
        if((s == null || s.length() == 0) && dict.isEmpty())
        {
            return true;
        }
        
        if(s == null || s.length() == 0 || dict.isEmpty())
        {
            return false;
        }
        
        boolean dp[] = new boolean [s.length()+1];
        dp[0] = true;
        int max = getMaxLength(dict);
        
        for(int i = 1; i < dp.length ; i++)
        {
            for(int j = i; j > 0 && i-j+1 <= max; j--)
            {
                if(dict.contains(s.substring(j-1,i)) && dp[j-1])
                {
                    dp[i] = true;
                    break;
                }
            }
        }
        
        return dp[dp.length-1];
    }
}
