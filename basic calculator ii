public class Solution {
    public int calculate(String s) {
        
        if( s == null || s.length() == 0)
        {
            return 0;
        }
        
        Stack<Integer> values = new Stack<Integer>();
        Stack<Character> operators = new Stack<Character>();
        
        for(int i = 0; i < s.length(); i++)
        {
            if(s.charAt(i) == ' ')
            {
                continue;
            }
            if(s.charAt(i) >= '0' && s.charAt(i) <= '9')
            {
                StringBuilder sb = new StringBuilder();
                while(i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '9')
                {
                    sb.append(s.charAt(i));
                    i++;
                }
                values.push(Integer.parseInt(sb.toString()));
                i--;
            }
            else if(s.charAt(i) == '+'|| s.charAt(i) == '-' || s.charAt(i) == '*'|| s.charAt(i) == '/')
            {
                while(!operators.isEmpty() && compareOp(operators.peek(), s.charAt(i)))
                {
                    values.push(cal(operators.pop(), values.pop(), values.pop()));
                }
                operators.push(s.charAt(i));
            }
        }
        
        while(!operators.isEmpty())
        {
            values.push(cal(operators.pop(), values.pop(), values.pop()));
        }
        return values.peek();
    }
    
    public int cal(char c, int a, int b)
    {
        int res = 0;
        switch(c)
        {
            case '+':
                res = a+b;
                break;
            case '-':
                res = b-a;
                break;
            case '*':
                res = b*a;
                break;
            case '/':
                res = (int)(b/a);
                break;
            default:
                break;
        }
        return res;
    }
    
    public boolean compareOp(char op1, char op2)
    {
        if(op1 == '*' || op1 == '/')
        {
            return true;
        }
        else if((op1 == '+' || op1 == '-') && (op2 == '+' || op2 == '-'))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
