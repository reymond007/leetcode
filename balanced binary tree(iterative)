/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isBalanced(TreeNode root) {
        
        if(root == null)
        {
            return true;
        }
        
        Stack<TreeNode> stack = new Stack<TreeNode>();
        TreeNode cur = root;
        stack.push(cur);
        TreeNode pre = null;
        
        while(!stack.isEmpty())
        {
            cur = stack.peek();
            if(cur.left == null && cur.right == null)
            {
                cur.val = 1;
                stack.pop();
                pre = cur;
            }
            else if(pre != null && (pre == cur.left || pre == cur.right))
            {
                if(cur.left == null && cur.right != null)
                {
                    if(cur.right.val > 1)
                    {
                        return false;
                    }
                    cur.val = cur.right.val+1;
                }
                else if(cur.right == null && cur.left != null)
                {
                    if(cur.left.val > 1)
                    {
                        return false;
                    }
                    cur.val = cur.left.val+1;
                }
                else
                {
                    if(Math.abs(cur.left.val-cur.right.val) >= 2)
                    {
                        return false;
                    }
                    cur.val = Math.max(cur.left.val,cur.right.val)+1;

                }
                
                stack.pop();
                pre = cur;
            }
            else
            {
                if(cur.right != null)
                {
                    stack.push(cur.right);
                }
                if(cur.left != null)
                {
                    stack.push(cur.left);
                }
            }
        }
        return true;
    }
}
