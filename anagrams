public class Solution {
    /**
     * @param strs: A list of strings
     * @return: A list of strings
     */
    public List<String> anagrams(String[] strs) {
        // write your code here
        
        List<String> results = new ArrayList<String>();
        if(strs == null || strs.length == 0)
        {
            return results;
        }
        
        HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();
        for(int i = 0; i < strs.length; i++)
        {
            String key = getAnagram(strs[i]);
            if(map.containsKey(key))
            {
                map.get(key).add(strs[i]);
            }
            else
            {
                ArrayList<String> list = new ArrayList<String>();
                list.add(strs[i]);
                map.put(key, list);
            }
        }
        
        for(ArrayList<String> l : map.values())
        {
            if(l.size()>1)
            {
                results.addAll(l);
            }
        }
        
        return results;
    }
    
    public String getAnagram(String str)
    {
        char[] temp = str.toCharArray();
        Arrays.sort(temp);
        return new String(temp);
    }
}
