public int findKth(int[] nums1, int[] nums2, int start1, int start2, int k)
{
      if(start1 + k -1 >= nums1.length)
      {
          return nums2[start2+k-1];
      }
      if(start2 + k -1 >= nums2.length)
      {
          return nums1[start1+k-1];
      }
      if(k == 1)
      {
         return Math.min(nums1[start1], nums2[start2]);
      }
      
      int A_key = start1+k-1 >= nums1.length ? Integer.MAX_VALUE : nums1[start1+k-1];
      int B_key = start2+k-1 >= nums2.length ? Integer.MAX_VALUE : nums1[start2+k-1];
     
      if(A_key > B_key)
      {
         return findKth(nums1, nums2,  start1, start2+k/2, k-k/2);
      }
      else
      {
         return findKth(nums1, nums2, start1+k/2, start1, k-k/2);
      }
      
}
